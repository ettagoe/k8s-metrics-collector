{
  "node": {
    "node_number_of_running_pods": "sum(kube_pod_info) by (node)",
    "node_number_of_running_containers": "sum(sum(kube_pod_container_info) by (pod) + on (pod) group_left (node) (0 * kube_pod_info)) by (node)",
    "node_cpu_usage_total": "sum by (instance) (1 - sum without (mode) (rate(node_cpu_seconds_total{mode=~'idle|iowait|steal'}[%I%])))",
    "node_cpu_limit": "kube_node_status_capacity{resource='cpu'} * 1000",
    "node_memory_working_set": "sum(avg_over_time(container_memory_working_set_bytes{container!=''}[%I%])) by (node)",
    "node_memory_limit,InstanceId,NodeName,InstanceType,EBSVolumeId": "{__name__=~'node_memory_MemTotal_bytes|kube_node_info|node_dmi_info|kube_persistentvolume_info'}",
    "node_cpu_usage_system": "sum(rate(node_cpu_seconds_total{mode='system'}[%I%])) by (instance)",
    "node_cpu_usage_user": "sum(rate(node_cpu_seconds_total{mode='user'}[%I%])) by (instance)",
    "node_memory_cache": "avg_over_time(node_memory_Cached_bytes[%I%])",
    "node_memory_failcnt": "sum(rate(container_memory_failcnt[5m])) by (instance)",
    "node_memory_pgfault": "rate(node_vmstat_pgfault[%I%])",
    "node_memory_pgmajfault": "rate(node_vmstat_pgmajfault[%I%])",
    "node_network_rx_bytes": "sum(rate(node_network_receive_bytes_total[%I%])) by (instance)",
    "node_network_rx_dropped": "sum(rate(node_network_receive_drop_total[%I%])) by (instance)",
    "node_network_rx_errors": "sum(rate(node_network_receive_errs_total[%I%])) by (instance)",
    "node_network_rx_packets": "sum(rate(node_network_receive_packets_total[%I%])) by (instance)",
    "node_network_tx_bytes": "sum(rate(node_network_transmit_bytes_total[%I%])) by (instance)",
    "node_network_tx_dropped": "sum(rate(node_network_transmit_drop_total[%I%])) by (instance)",
    "node_network_tx_errors": "sum(rate(node_network_transmit_errs_total[%I%])) by (instance)",
    "node_network_tx_packets": "sum(rate(node_network_transmit_packets_total[%I%])) by (instance)",
    "node_filesystem_available": "sum(node_filesystem_avail_bytes{fstype!='tmpfs'}) by (instance)",
    "node_filesystem_capacity,device,fstype": "sum(node_filesystem_size_bytes{fstype!='tmpfs'}) by (instance)",
    "node_filesystem_inodes": "sum(container_fs_inodes_total) by (node)",
    "node_filesystem_inodes_free": "sum(container_fs_inodes_free) by (node)",
    "node_interface_network_rx_bytes": "sum(rate(node_network_receive_bytes_total[%I%])) by (instance,device)",
    "node_interface_network_rx_dropped": "sum(rate(node_network_receive_drop_total[%I%])) by (instance,device)",
    "node_interface_network_rx_errors": "sum(rate(node_network_receive_errs_total[%I%])) by (instance,device)",
    "node_interface_network_rx_packets": "sum(rate(node_network_receive_packets_total[%I%])) by (instance,device)",
    "node_interface_network_tx_bytes": "sum(rate(node_network_transmit_bytes_total[%I%])) by (instance,device)",
    "node_interface_network_tx_dropped": "sum(rate(node_network_transmit_drop_total[%I%])) by (instance,device)",
    "node_interface_network_tx_errors": "sum(rate(node_network_transmit_errs_total[%I%])) by (instance,device)",
    "node_interface_network_tx_packets": "sum(rate(node_network_transmit_packets_total[%I%])) by (instance,device)"
  },
  "pod": {
    "Service,Namespace,PodName,NodeName,pod_id,pod_owners": "kube_pod_info",
    "pod_number_of_container_restarts": "rate(kube_pod_container_status_restarts_total[%I%])",
    "pod_memory_cache": "sum(avg_over_time(container_memory_cache[%I%])) by (node,pod)",
    "pod_memory_failcnt": "sum(avg_over_time(container_memory_failcnt[%I%])) by (node,pod)",
    "pod_memory_usage": "sum(avg_over_time(container_memory_usage_bytes[%I%])) by (node,pod)",
    "pod_memory_working_set": "sum(avg_over_time(container_memory_working_set_bytes{container!=''}[%I%])) by (node,pod)",
    "pod_number_of_containers": "sum(kube_pod_container_info) by (pod)",
    "pod_number_of_running_containers": "sum(kube_pod_container_status_running) by (pod)"

  },
  "container": {
    "container_memory_max_usage": "container_memory_max_usage_bytes",
    "container_memory_usage": "avg_over_time(container_memory_usage_bytes[%I%])"
  },
  "cluster": {
    "cluster_node_count": "sum(kube_node_info)",
    "service_number_of_running_pods": "sum(kube_pod_container_status_running) by(service)",
    "namespace_number_of_running_pods": "sum(kube_pod_container_status_running) by(namespace)"
  }
}